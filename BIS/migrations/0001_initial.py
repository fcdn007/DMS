# Generated by Django 3.0.7 on 2020-07-17 15:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SampleInventoryInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampler_id', models.CharField(blank=True, db_column='华大编号', max_length=35, null=True, unique=True)),
                ('plasma_num', models.PositiveIntegerField(db_column='血浆管数', default=0)),
                ('cancer_tissue_num', models.PositiveIntegerField(db_column='癌组织样本数量', default=0)),
                ('adjacent_mucosa_num', models.PositiveIntegerField(db_column='癌旁组织样本数量', default=0)),
                ('WBC_num', models.PositiveIntegerField(db_column='白细胞样本数量', default=0)),
                ('stool_num', models.PositiveIntegerField(db_column='粪便样本数量', default=0)),
                ('memo', models.TextField(blank=True, db_column='备注', null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, db_column='最近修改时间')),
            ],
            options={
                'verbose_name': '样本库存信息表',
                'db_table': '样本库存信息表',
                'ordering': ['-id'],
                'permissions': [('bulk_delete_SampleInventoryInfo', 'Can bulk delete 样本库存信息表'), ('bulk_update_SampleInventoryInfo', 'Can bulk update 样本库存信息表')],
            },
        ),
        migrations.CreateModel(
            name='SampleInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, db_column='生物样本编号', max_length=35, null=True, unique=True)),
                ('raw_id', models.CharField(blank=True, db_column='原始样本编号', max_length=50, null=True)),
                ('fridge', models.CharField(db_column='冰箱位置', max_length=50)),
                ('plate', models.CharField(db_column='孔板号', max_length=50)),
                ('well', models.CharField(db_column='孔位', max_length=50)),
                ('sample_type', models.CharField(db_column='样本类型', max_length=50)),
                ('sample_date', models.DateField(blank=True, db_column='采样日期', null=True)),
                ('send_date', models.DateField(blank=True, db_column='寄送日期', null=True)),
                ('memo', models.TextField(blank=True, db_column='备注', null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, db_column='最近修改时间')),
                ('sampleinventoryinfo', models.ForeignKey(blank=True, db_column='样本库存信息', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SampleInfo_SampleInventoryInfo', to='BIS.SampleInventoryInfo')),
            ],
            options={
                'verbose_name': '样本信息表',
                'db_table': '样本信息表',
                'ordering': ['-id'],
                'permissions': [('bulk_delete_SampleInfo', 'Can bulk delete 样本信息表'), ('bulk_update_SampleInfo', 'Can bulk update 样本信息表')],
            },
        ),
        migrations.CreateModel(
            name='ExtractInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dna_id', models.CharField(db_column='核酸提取编号', max_length=35, unique=True)),
                ('extract_date', models.DateField(blank=True, db_column='提取日期', null=True)),
                ('sample_type', models.CharField(db_column='样本类型', max_length=50)),
                ('nucleic_type', models.CharField(db_column='核酸类型', max_length=50)),
                ('sample_volume', models.FloatField(blank=True, db_column='样本体积(ml)/质量(mg)', null=True)),
                ('extract_method', models.CharField(blank=True, db_column='提取方法', max_length=50, null=True)),
                ('dna_con', models.FloatField(blank=True, db_column='浓度(ng/ul)', null=True)),
                ('dna_vol', models.FloatField(blank=True, db_column='体积(ul)', null=True)),
                ('fridge', models.CharField(db_column='冰箱位置', max_length=50)),
                ('plate', models.CharField(db_column='孔板号', max_length=50)),
                ('well', models.CharField(db_column='孔位', max_length=50)),
                ('successM', models.FloatField(db_column='成功建库使用量(ng)', default=0)),
                ('failM', models.FloatField(db_column='失败建库使用量(ng)', default=0)),
                ('researchM', models.FloatField(db_column='科研项目使用量(ng)', default=0)),
                ('othersM', models.FloatField(db_column='其他使用量(ng)', default=0)),
                ('memo', models.TextField(blank=True, db_column='备注', null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, db_column='最近修改时间')),
                ('sampleinfo', models.ForeignKey(blank=True, db_column='样本信息', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ExtractInfo_SampleInfo', to='BIS.SampleInfo')),
                ('sampleinventoryinfo', models.ForeignKey(blank=True, db_column='样本库存信息', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ExtractInfo_SampleInventoryInfo', to='BIS.SampleInventoryInfo')),
            ],
            options={
                'verbose_name': '样本提取信息表',
                'db_table': '样本提取信息表',
                'ordering': ['-id'],
                'permissions': [('bulk_delete_ExtractInfo', 'Can bulk delete 样本提取信息表'), ('bulk_update_ExtractInfo', 'Can bulk update 样本提取信息表')],
            },
        ),
        migrations.CreateModel(
            name='DNAUsageRecordInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_date', models.DateField(blank=True, db_column='使用日期', null=True)),
                ('mass', models.FloatField(blank=True, db_column='使用量(ng)', null=True)),
                ('usage', models.CharField(db_column='用途', max_length=25)),
                ('singleLB_id', models.CharField(blank=True, db_column='建库编号(如有)', max_length=35, null=True)),
                ('memo', models.TextField(blank=True, db_column='备注', null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, db_column='最近修改时间')),
                ('extractinfo', models.ForeignKey(blank=True, db_column='样本提取信息', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DNAUsageRecordInfo_ExtractInfo', to='BIS.ExtractInfo')),
                ('sampleinventoryinfo', models.ForeignKey(blank=True, db_column='样本库存信息', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DNAUsageRecordInfo_SampleInventoryInfo', to='BIS.SampleInventoryInfo')),
            ],
            options={
                'verbose_name': '样本核酸使用记录表',
                'db_table': '样本核酸使用记录表',
                'ordering': ['-id'],
                'permissions': [('bulk_delete_DNAUsageRecordInfo', 'Can bulk delete 样本核酸使用记录表'), ('bulk_update_DNAUsageRecordInfo', 'Can bulk update 样本核酸使用记录表')],
            },
        ),
    ]
