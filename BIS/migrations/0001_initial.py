# Generated by Django 2.1.7 on 2020-06-30 10:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DNAUsageRecordInfo',
            fields=[
                ('usage_date', models.DateField(blank=True, db_column='使用日期', null=True)),
                ('mass', models.FloatField(blank=True, db_column='使用量', null=True)),
                ('usage', models.CharField(db_column='用途', max_length=25)),
                ('singleLB_id', models.CharField(blank=True, db_column='建库编号', max_length=35, null=True)),
                ('memo', models.TextField(blank=True, db_column='备注', null=True)),
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, db_column='最近修改时间')),
            ],
            options={
                'verbose_name': '样本核酸使用记录表',
                'db_table': '样本核酸使用记录表',
                'ordering': ['-index'],
            },
        ),
        migrations.CreateModel(
            name='ExtractInfo',
            fields=[
                ('dna_id', models.CharField(db_column='核酸提取编号', max_length=35, unique=True)),
                ('extract_date', models.DateField(blank=True, db_column='提取日期', null=True)),
                ('sample_type', models.CharField(db_column='样本类型', max_length=50)),
                ('nucleic_type', models.CharField(db_column='核酸类型', max_length=50)),
                ('sample_volume', models.FloatField(blank=True, db_column='样本体积', null=True)),
                ('extract_method', models.CharField(blank=True, db_column='提取方法', max_length=50, null=True)),
                ('dna_con', models.FloatField(blank=True, db_column='浓度', null=True)),
                ('dna_vol', models.FloatField(blank=True, db_column='体积', null=True)),
                ('fridge', models.CharField(db_column='冰箱位置', max_length=50)),
                ('plate', models.CharField(db_column='孔板号', max_length=50)),
                ('well', models.CharField(db_column='孔位', max_length=50)),
                ('successM', models.FloatField(blank=True, db_column='成功建库使用量', null=True)),
                ('failM', models.FloatField(blank=True, db_column='失败建库使用量', null=True)),
                ('researchM', models.FloatField(blank=True, db_column='科研项目使用量', null=True)),
                ('othersM', models.FloatField(blank=True, db_column='其他使用量', null=True)),
                ('memo', models.TextField(blank=True, db_column='备注', null=True)),
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, db_column='最近修改时间')),
            ],
            options={
                'verbose_name': '样本提取表',
                'db_table': '样本提取表',
                'ordering': ['-index'],
            },
        ),
        migrations.CreateModel(
            name='SampleInfo',
            fields=[
                ('sample_id', models.CharField(blank=True, db_column='样本编号', max_length=35, null=True, unique=True)),
                ('raw_id', models.CharField(blank=True, db_column='原始样本编号', max_length=50, null=True)),
                ('fridge', models.CharField(db_column='冰箱位置', max_length=50)),
                ('plate', models.CharField(db_column='孔板号', max_length=50)),
                ('well', models.CharField(db_column='孔位', max_length=50)),
                ('sample_type', models.CharField(db_column='样本类型', max_length=50)),
                ('sample_date', models.DateField(blank=True, db_column='采样日期', null=True)),
                ('send_date', models.DateField(blank=True, db_column='寄送日期', null=True)),
                ('memo', models.TextField(blank=True, db_column='备注', null=True)),
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, db_column='最近修改时间')),
            ],
            options={
                'verbose_name': '样本信息表',
                'db_table': '样本信息表',
                'ordering': ['-index'],
            },
        ),
        migrations.CreateModel(
            name='SampleInventoryInfo',
            fields=[
                ('sampler_id', models.CharField(blank=True, db_column='患者编号', max_length=35, null=True, unique=True)),
                ('plasma_num', models.PositiveIntegerField(db_column='血浆管数', default=0)),
                ('adjacent_mucosa_num', models.PositiveIntegerField(db_column='癌旁组织', default=0)),
                ('cancer_tissue_num', models.PositiveIntegerField(db_column='癌组织', default=0)),
                ('WBC_num', models.PositiveIntegerField(db_column='白细胞', default=0)),
                ('stool_num', models.PositiveIntegerField(db_column='粪便', default=0)),
                ('memo', models.TextField(blank=True, db_column='备注', null=True)),
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, db_column='最近修改时间')),
            ],
            options={
                'verbose_name': '样本库存信息表',
                'db_table': '样本库存信息表',
                'ordering': ['-index'],
            },
        ),
        migrations.AddField(
            model_name='sampleinfo',
            name='sampler_id',
            field=models.ForeignKey(blank=True, db_column='患者编号', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SampleInfo_SampleInventoryInfo', to='BIS.SampleInventoryInfo', to_field='sampler_id'),
        ),
        migrations.AddField(
            model_name='extractinfo',
            name='sample_id',
            field=models.ForeignKey(blank=True, db_column='样本编号', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ExtractInfo_SampleInfo', to='BIS.SampleInfo', to_field='sample_id'),
        ),
        migrations.AddField(
            model_name='extractinfo',
            name='sampler_id',
            field=models.ForeignKey(blank=True, db_column='患者编号', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ExtractInfo_SampleInventoryInfo', to='BIS.SampleInventoryInfo', to_field='sampler_id'),
        ),
        migrations.AddField(
            model_name='dnausagerecordinfo',
            name='dna_id',
            field=models.ForeignKey(blank=True, db_column='核酸提取编号', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DNAUsageRecordInfo_ExtractInfo', to='BIS.ExtractInfo', to_field='dna_id'),
        ),
        migrations.AddField(
            model_name='dnausagerecordinfo',
            name='sample_id',
            field=models.ForeignKey(blank=True, db_column='样本编号', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DNAUsageRecordInfo_SampleInfo', to='BIS.SampleInfo', to_field='sample_id'),
        ),
        migrations.AddField(
            model_name='dnausagerecordinfo',
            name='sampler_id',
            field=models.ForeignKey(blank=True, db_column='患者编号', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DNAUsageRecordInfo_SampleInventoryInfo', to='BIS.SampleInventoryInfo', to_field='sampler_id'),
        ),
    ]
